{"version":3,"file":"sortable-table.bundle.js","sources":["../../../../src/moj/components/sortable-table/sortable-table.mjs"],"sourcesContent":["import { ConfigurableComponent } from 'govuk-frontend'\n\n/**\n * @augments {ConfigurableComponent<SortableTableConfig>}\n */\nexport class SortableTable extends ConfigurableComponent {\n  /**\n   * @param {Element | null} $root - HTML element to use for sortable table\n   * @param {SortableTableConfig} [config] - Sortable table config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    const $head = $root?.querySelector('thead')\n    const $body = $root?.querySelector('tbody')\n\n    if (!$head || !$body) {\n      return this\n    }\n\n    this.$head = $head\n    this.$body = $body\n    this.$caption = this.$root.querySelector('caption')\n\n    this.$upArrow = `<svg width=\"22\" height=\"22\" focusable=\"false\" aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M6.5625 15.5L11 6.63125L15.4375 15.5H6.5625Z\" fill=\"currentColor\"/>\n</svg>`\n    this.$downArrow = `<svg width=\"22\" height=\"22\" focusable=\"false\" aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M15.4375 7L11 15.8687L6.5625 7L15.4375 7Z\" fill=\"currentColor\"/>\n</svg>`\n    this.$upDownArrow = `<svg width=\"22\" height=\"22\" focusable=\"false\" aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M8.1875 9.5L10.9609 3.95703L13.7344 9.5H8.1875Z\" fill=\"currentColor\"/>\n<path d=\"M13.7344 12.0781L10.9609 17.6211L8.1875 12.0781H13.7344Z\" fill=\"currentColor\"/>\n</svg>`\n\n    this.$headings = this.$head\n      ? Array.from(this.$head.querySelectorAll('th'))\n      : []\n\n    this.createHeadingButtons()\n    this.updateCaption()\n    this.updateDirectionIndicators()\n    this.createStatusBox()\n    this.initialiseSortedColumn()\n\n    this.$head.addEventListener('click', this.onSortButtonClick.bind(this))\n  }\n\n  createHeadingButtons() {\n    for (const $heading of this.$headings) {\n      if ($heading.hasAttribute('aria-sort')) {\n        this.createHeadingButton($heading)\n      }\n    }\n  }\n\n  /**\n   * @param {HTMLTableCellElement} $heading\n   */\n  createHeadingButton($heading) {\n    const index = this.$headings.indexOf($heading)\n    const $button = document.createElement('button')\n\n    $button.setAttribute('type', 'button')\n    $button.setAttribute('data-index', `${index}`)\n    $button.textContent = $heading.textContent\n\n    $heading.textContent = ''\n    $heading.appendChild($button)\n  }\n\n  createStatusBox() {\n    this.$status = document.createElement('div')\n\n    this.$status.setAttribute('aria-atomic', 'true')\n    this.$status.setAttribute('aria-live', 'polite')\n    this.$status.setAttribute('class', 'govuk-visually-hidden')\n    this.$status.setAttribute('role', 'status')\n\n    this.$root.insertAdjacentElement('afterend', this.$status)\n  }\n\n  initialiseSortedColumn() {\n    const $rows = this.getTableRowsArray()\n\n    const $heading = this.$root.querySelector(\n      'th[aria-sort=\"ascending\"], th[aria-sort=\"descending\"]'\n    )\n    const $sortButton = $heading?.querySelector('button')\n    const sortDirection = $heading?.getAttribute('aria-sort')\n\n    const columnNumber = Number.parseInt(\n      $sortButton?.getAttribute('data-index') ?? '0',\n      10\n    )\n\n    if (\n      !$heading ||\n      !$sortButton ||\n      !(sortDirection === 'ascending' || sortDirection === 'descending')\n    ) {\n      return\n    }\n\n    const $sortedRows = this.sort($rows, columnNumber, sortDirection)\n    this.addRows($sortedRows)\n  }\n\n  /**\n   * @param {MouseEvent} event - Click event\n   */\n  onSortButtonClick(event) {\n    const $target = /** @type {HTMLElement} */ (event.target)\n    const $button = $target.closest('button')\n\n    if (\n      !$button ||\n      !($button instanceof HTMLButtonElement) ||\n      !$button.parentElement\n    ) {\n      return\n    }\n\n    const $heading = $button.parentElement\n    const sortDirection = $heading.getAttribute('aria-sort')\n\n    const columnNumber = Number.parseInt(\n      $button?.getAttribute('data-index') ?? '0',\n      10\n    )\n\n    const newSortDirection =\n      sortDirection === 'none' || sortDirection === 'descending'\n        ? 'ascending'\n        : 'descending'\n\n    const $rows = this.getTableRowsArray()\n    const $sortedRows = this.sort($rows, columnNumber, newSortDirection)\n\n    this.addRows($sortedRows)\n    this.removeButtonStates()\n    this.updateButtonState($button, newSortDirection)\n    this.updateDirectionIndicators()\n  }\n\n  updateCaption() {\n    if (!this.$caption) {\n      return\n    }\n\n    let assistiveText = this.$caption.querySelector('.govuk-visually-hidden')\n    if (assistiveText) {\n      return\n    }\n\n    assistiveText = document.createElement('span')\n    assistiveText.classList.add('govuk-visually-hidden')\n    assistiveText.textContent = 'â€ˆ(column headers with buttons are sortable).'\n\n    this.$caption.appendChild(assistiveText)\n  }\n\n  /**\n   * @param {HTMLButtonElement} $button\n   * @param {string} direction\n   */\n  updateButtonState($button, direction) {\n    if (!(direction === 'ascending' || direction === 'descending')) {\n      return\n    }\n\n    $button.parentElement.setAttribute('aria-sort', direction)\n    let message = this.config.statusMessage\n    message = message.replace(/%heading%/, $button.textContent)\n    message = message.replace(/%direction%/, this.config[`${direction}Text`])\n    this.$status.textContent = message\n  }\n\n  updateDirectionIndicators() {\n    for (const $heading of this.$headings) {\n      const $button = /** @type {HTMLButtonElement} */ (\n        $heading.querySelector('button')\n      )\n      if ($heading.hasAttribute('aria-sort') && $button) {\n        const direction = $heading.getAttribute('aria-sort')\n        $button.querySelector('svg')?.remove()\n\n        switch (direction) {\n          case 'ascending':\n            $button.insertAdjacentHTML('beforeend', this.$upArrow)\n            break\n          case 'descending':\n            $button.insertAdjacentHTML('beforeend', this.$downArrow)\n            break\n          default:\n            $button.insertAdjacentHTML('beforeend', this.$upDownArrow)\n        }\n      }\n    }\n  }\n\n  removeButtonStates() {\n    for (const $heading of this.$headings) {\n      $heading.setAttribute('aria-sort', 'none')\n    }\n  }\n\n  /**\n   * @param {HTMLTableRowElement[]} $rows\n   */\n  addRows($rows) {\n    for (const $row of $rows) {\n      this.$body.append($row)\n    }\n  }\n\n  getTableRowsArray() {\n    return Array.from(this.$body.querySelectorAll('tr'))\n  }\n\n  /**\n   * @param {HTMLTableRowElement[]} $rows\n   * @param {number} columnNumber\n   * @param {string} sortDirection\n   */\n  sort($rows, columnNumber, sortDirection) {\n    return $rows.sort(($rowA, $rowB) => {\n      const $tdA = $rowA.querySelectorAll('td, th')[columnNumber]\n      const $tdB = $rowB.querySelectorAll('td, th')[columnNumber]\n\n      if (\n        !$tdA ||\n        !$tdB ||\n        !($tdA instanceof HTMLElement) ||\n        !($tdB instanceof HTMLElement)\n      ) {\n        return 0\n      }\n\n      const valueA =\n        sortDirection === 'ascending'\n          ? this.getCellValue($tdA)\n          : this.getCellValue($tdB)\n\n      const valueB =\n        sortDirection === 'ascending'\n          ? this.getCellValue($tdB)\n          : this.getCellValue($tdA)\n\n      return !(typeof valueA === 'number' && typeof valueB === 'number')\n        ? valueA.toString().localeCompare(valueB.toString())\n        : valueA - valueB\n    })\n  }\n\n  /**\n   * @param {HTMLElement} $cell\n   */\n  getCellValue($cell) {\n    const val = $cell.getAttribute('data-sort-value') || $cell.innerHTML\n    const valAsNumber = Number(val)\n\n    return Number.isFinite(valAsNumber)\n      ? valAsNumber // Exclude invalid numbers, infinity etc\n      : val\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'moj-sortable-table'\n\n  /**\n   * Sortable table config\n   *\n   * @type {SortableTableConfig}\n   */\n  static defaults = Object.freeze({\n    statusMessage: 'Sort by %heading% (%direction%)',\n    ascendingText: 'ascending',\n    descendingText: 'descending'\n  })\n\n  /**\n   * Sortable table config schema\n   *\n   * @satisfies {Schema<SortableTableConfig>}\n   */\n  static schema = Object.freeze(\n    /** @type {const} */ ({\n      properties: {\n        statusMessage: { type: 'string' },\n        ascendingText: { type: 'string' },\n        descendingText: { type: 'string' }\n      }\n    })\n  )\n}\n\n/**\n * Sortable table config\n *\n * @typedef {object} SortableTableConfig\n * @property {string} [statusMessage] - Status message\n * @property {string} [ascendingText] - Ascending text\n * @property {string} [descendingText] - Descending text\n */\n\n/**\n * @import { Schema } from 'govuk-frontend/dist/govuk/common/configuration.mjs'\n */\n"],"names":["SortableTable","ConfigurableComponent","constructor","$root","config","$head","querySelector","$body","$caption","$upArrow","$downArrow","$upDownArrow","$headings","Array","from","querySelectorAll","createHeadingButtons","updateCaption","updateDirectionIndicators","createStatusBox","initialiseSortedColumn","addEventListener","onSortButtonClick","bind","$heading","hasAttribute","createHeadingButton","index","indexOf","$button","document","createElement","setAttribute","textContent","appendChild","$status","insertAdjacentElement","_$sortButton$getAttri","$rows","getTableRowsArray","$sortButton","sortDirection","getAttribute","columnNumber","Number","parseInt","$sortedRows","sort","addRows","event","_$button$getAttribute","$target","target","closest","HTMLButtonElement","parentElement","newSortDirection","removeButtonStates","updateButtonState","assistiveText","classList","add","direction","message","statusMessage","replace","_$button$querySelecto","remove","insertAdjacentHTML","$row","append","$rowA","$rowB","$tdA","$tdB","HTMLElement","valueA","getCellValue","valueB","toString","localeCompare","$cell","val","innerHTML","valAsNumber","isFinite","moduleName","defaults","Object","freeze","ascendingText","descendingText","schema","properties","type"],"mappings":"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"}