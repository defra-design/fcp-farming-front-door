{"version":3,"file":"alert.bundle.js","sources":["../../../../src/moj/common/index.mjs","../../../../src/moj/helpers.mjs","../../../../src/moj/components/alert/alert.mjs"],"sourcesContent":["/**\n * GOV.UK Frontend helpers\n *\n * @todo Import from GOV.UK Frontend\n */\n\n/**\n * Move focus to element\n *\n * Sets tabindex to -1 to make the element programmatically focusable,\n * but removes it on blur as the element doesn't need to be focused again.\n *\n * @template {HTMLElement} FocusElement\n * @param {FocusElement} $element - HTML element\n * @param {object} [options] - Handler options\n * @param {function(this: FocusElement): void} [options.onBeforeFocus] - Callback before focus\n * @param {function(this: FocusElement): void} [options.onBlur] - Callback on blur\n */\nexport function setFocus($element, options = {}) {\n  const isFocusable = $element.getAttribute('tabindex')\n\n  if (!isFocusable) {\n    $element.setAttribute('tabindex', '-1')\n  }\n\n  /**\n   * Handle element focus\n   */\n  function onFocus() {\n    $element.addEventListener('blur', onBlur, { once: true })\n  }\n\n  /**\n   * Handle element blur\n   */\n  function onBlur() {\n    options.onBlur?.call($element)\n\n    if (!isFocusable) {\n      $element.removeAttribute('tabindex')\n    }\n  }\n\n  // Add listener to reset element on blur, after focus\n  $element.addEventListener('focus', onFocus, { once: true })\n\n  // Focus element\n  options.onBeforeFocus?.call($element)\n  $element.focus()\n}\n","/**\n * @param {Element} $element - Element to remove attribute value from\n * @param {string} attr - Attribute name\n * @param {string} value - Attribute value\n */\nexport function removeAttributeValue($element, attr, value) {\n  let re, m\n  if ($element.getAttribute(attr)) {\n    if ($element.getAttribute(attr) === value) {\n      $element.removeAttribute(attr)\n    } else {\n      re = new RegExp(`(^|\\\\s)${value}(\\\\s|$)`)\n      m = $element.getAttribute(attr).match(re)\n      if (m && m.length === 3) {\n        $element.setAttribute(\n          attr,\n          $element.getAttribute(attr).replace(re, m[1] && m[2] ? ' ' : '')\n        )\n      }\n    }\n  }\n}\n\n/**\n * @param {Element} $element - Element to add attribute value to\n * @param {string} attr - Attribute name\n * @param {string} value - Attribute value\n */\nexport function addAttributeValue($element, attr, value) {\n  let re\n  if (!$element.getAttribute(attr)) {\n    $element.setAttribute(attr, value)\n  } else {\n    re = new RegExp(`(^|\\\\s)${value}(\\\\s|$)`)\n    if (!re.test($element.getAttribute(attr))) {\n      $element.setAttribute(attr, `${$element.getAttribute(attr)} ${value}`)\n    }\n  }\n}\n\n/**\n * Find an elements next sibling\n *\n * Utility function to find an elements next sibling matching the provided\n * selector.\n *\n * @param {Element | null} $element - Element to find siblings for\n * @param {string} [selector] - selector for required sibling\n */\nexport function getNextSibling($element, selector) {\n  if (!$element || !($element instanceof HTMLElement)) {\n    return\n  }\n\n  // Get the next sibling element\n  let $sibling = $element.nextElementSibling\n\n  // If there's no selector, return the first sibling\n  if (!selector) return $sibling\n\n  // If the sibling matches our selector, use it\n  // If not, jump to the next sibling and continue the loop\n  while ($sibling) {\n    if ($sibling.matches(selector)) return $sibling\n    $sibling = $sibling.nextElementSibling\n  }\n}\n\n/**\n * Find an elements preceding sibling\n *\n * Utility function to find an elements previous sibling matching the provided\n * selector.\n *\n * @param {Element | null} $element - Element to find siblings for\n * @param {string} [selector] - selector for required sibling\n */\nexport function getPreviousSibling($element, selector) {\n  if (!$element || !($element instanceof HTMLElement)) {\n    return\n  }\n\n  // Get the previous sibling element\n  let $sibling = $element.previousElementSibling\n\n  // If there's no selector, return the first sibling\n  if (!selector) return $sibling\n\n  // If the sibling matches our selector, use it\n  // If not, jump to the next sibling and continue the loop\n  while ($sibling) {\n    if ($sibling.matches(selector)) return $sibling\n    $sibling = $sibling.previousElementSibling\n  }\n}\n\n/**\n * @param {Element | null} $element\n * @param {string} [selector]\n */\nexport function findNearestMatchingElement($element, selector) {\n  // If no element or selector is provided, return\n  if (!$element || !($element instanceof HTMLElement) || !selector) {\n    return\n  }\n\n  // Start with the current element\n  let $currentElement = $element\n\n  while ($currentElement) {\n    // First check the current element\n    if ($currentElement.matches(selector)) {\n      return $currentElement\n    }\n\n    // Check all previous siblings\n    let $sibling = $currentElement.previousElementSibling\n    while ($sibling) {\n      // Check if the sibling itself is a heading\n      if ($sibling.matches(selector)) {\n        return $sibling\n      }\n      $sibling = $sibling.previousElementSibling\n    }\n\n    // If no match found in siblings, move up to parent\n    $currentElement = $currentElement.parentElement\n  }\n}\n","import { ConfigurableComponent } from 'govuk-frontend'\n\nimport { setFocus } from '../../common/index.mjs'\nimport {\n  findNearestMatchingElement,\n  getPreviousSibling\n} from '../../helpers.mjs'\n\n/**\n * @augments {ConfigurableComponent<AlertConfig>}\n */\nexport class Alert extends ConfigurableComponent {\n  /**\n   * @param {Element | null} $root - HTML element to use for alert\n   * @param {AlertConfig} [config] - Alert config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    /**\n     * Focus the alert\n     *\n     * If `role=\"alert\"` is set, focus the element to help some assistive\n     * technologies prioritise announcing it.\n     *\n     * You can turn off the auto-focus functionality by setting\n     * `data-disable-auto-focus=\"true\"` in the component HTML. You might wish to\n     * do this based on user research findings, or to avoid a clash with another\n     * element which should be focused when the page loads.\n     */\n    if (\n      this.$root.getAttribute('role') === 'alert' &&\n      !this.config.disableAutoFocus\n    ) {\n      setFocus(this.$root)\n    }\n\n    this.$dismissButton = this.$root.querySelector('.moj-alert__dismiss')\n\n    if (this.config.dismissible && this.$dismissButton) {\n      this.$dismissButton.innerHTML = this.config.dismissText\n      this.$dismissButton.removeAttribute('hidden')\n\n      this.$root.addEventListener('click', (event) => {\n        if (\n          event.target instanceof Node &&\n          this.$dismissButton.contains(event.target)\n        ) {\n          this.dimiss()\n        }\n      })\n    }\n  }\n\n  /**\n   * Handle dismissing the alert\n   */\n  dimiss() {\n    let $elementToRecieveFocus\n\n    // If a selector has been provided, attempt to find that element\n    if (this.config.focusOnDismissSelector) {\n      $elementToRecieveFocus = document.querySelector(\n        this.config.focusOnDismissSelector\n      )\n    }\n\n    // Is the next sibling another alert\n    if (!$elementToRecieveFocus) {\n      const $nextSibling = this.$root.nextElementSibling\n      if ($nextSibling && $nextSibling.matches('.moj-alert')) {\n        $elementToRecieveFocus = $nextSibling\n      }\n    }\n\n    // Else try to find any preceding sibling alert or heading\n    if (!$elementToRecieveFocus) {\n      $elementToRecieveFocus = getPreviousSibling(\n        this.$root,\n        '.moj-alert, h1, h2, h3, h4, h5, h6'\n      )\n    }\n\n    // Else find the closest ancestor heading, or fallback to main, or last resort\n    // use the body element\n    if (!$elementToRecieveFocus) {\n      $elementToRecieveFocus = findNearestMatchingElement(\n        this.$root,\n        'h1, h2, h3, h4, h5, h6, main, body'\n      )\n    }\n\n    // If we have an element, place focus on it\n    if ($elementToRecieveFocus instanceof HTMLElement) {\n      setFocus($elementToRecieveFocus)\n    }\n\n    // Remove the alert\n    this.$root.remove()\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'moj-alert'\n\n  /**\n   * Alert default config\n   *\n   * @type {AlertConfig}\n   */\n  static defaults = Object.freeze({\n    dismissible: false,\n    dismissText: 'Dismiss',\n    disableAutoFocus: false\n  })\n\n  /**\n   * Alert config schema\n   *\n   * @satisfies {Schema<AlertConfig>}\n   */\n  static schema = Object.freeze(\n    /** @type {const} */ ({\n      properties: {\n        dismissible: { type: 'boolean' },\n        dismissText: { type: 'string' },\n        disableAutoFocus: { type: 'boolean' },\n        focusOnDismissSelector: { type: 'string' }\n      }\n    })\n  )\n}\n\n/**\n * @typedef {object} AlertConfig\n * @property {boolean} [dismissible=false] - Can the alert be dismissed by the user\n * @property {string} [dismissText=Dismiss] - the label text for the dismiss button\n * @property {boolean} [disableAutoFocus=false] - whether the alert will be autofocused\n * @property {string} [focusOnDismissSelector] - CSS Selector for element to be focused on dismiss\n */\n\n/**\n * @import { Schema } from 'govuk-frontend/dist/govuk/common/configuration.mjs'\n */\n"],"names":["setFocus","$element","options","_options$onBeforeFocu","isFocusable","getAttribute","setAttribute","onFocus","addEventListener","onBlur","once","_options$onBlur","call","removeAttribute","onBeforeFocus","focus","getPreviousSibling","selector","HTMLElement","$sibling","previousElementSibling","matches","findNearestMatchingElement","$currentElement","parentElement","Alert","ConfigurableComponent","constructor","$root","config","disableAutoFocus","$dismissButton","querySelector","dismissible","innerHTML","dismissText","event","target","Node","contains","dimiss","$elementToRecieveFocus","focusOnDismissSelector","document","$nextSibling","nextElementSibling","remove","moduleName","defaults","Object","freeze","schema","properties","type"],"mappings":"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"}